version: '3.9'

networks:
  k6-support: {}  # Keeping original network name for compatibility

volumes:
  prometheus_data: {}
  grafana_data: {}
  influxdb_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: k6-support-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--log.level=debug'  # Keeping original debug logging
    ports:
      - 9199:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - k6-support

  influxdb:
      image: influxdb:2.7
      container_name: k6-support-influxdb
      restart: unless-stopped
      environment:
        - DOCKER_INFLUXDB_INIT_MODE=setup
        - DOCKER_INFLUXDB_INIT_USERNAME=admin
        - DOCKER_INFLUXDB_INIT_PASSWORD=password
        - DOCKER_INFLUXDB_INIT_ORG=myorg
        - DOCKER_INFLUXDB_INIT_BUCKET=k6
        - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN:-your-super-secret-admin-token}
        # V1 API Compatibility
        - INFLUXDB_HTTP_AUTH_ENABLED=true
        - INFLUXDB_HTTP_BIND_ADDRESS=:8086
        - DOCKER_INFLUXDB_INIT_RETENTION=0
        - DOCKER_INFLUXDB_INIT_V1_SUPPORT_ENABLED=true
      volumes:
        - influxdb_data:/var/lib/influxdb2
        - ./config/influxdb:/etc/influxdb2
        - ./config/influxdb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      ports:
        - 8186:8086
      networks:
        - k6-support

  telegraf:
    image: telegraf:1.28
    container_name: k6-support-telegraf
    user: telegraf:991
    restart: unless-stopped
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
      - HOST_VAR=/hostfs/var  # Keeping original host mappings
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
      - INFLUX_TOKEN=${INFLUX_TOKEN}
    privileged: true  # Kept for existing functionality
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro 
      - ./config/telegraf/telegraf.d:/etc/telegraf/telegraf.d:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/host/sys:ro
      - /proc:/host/proc:ro
      - /etc:/host/etc:ro
    depends_on:
      - influxdb
    links:
      - influxdb  # Keeping for compatibility
    ports:
      - '127.0.0.1:8125:8125/udp'  # Kept for existing functionality
    networks:
      - k6-support

  grafana:
    image: grafana/grafana-oss:10.2.0
    container_name: k6-support-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel
    ports:
      - 9409:3000
    volumes:
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./config/grafana/dashboards/k6:/var/lib/grafana/dashboards/k6
      - ./config/grafana/dashboards/influxdb:/var/lib/grafana/dashboards/influxdb
      - ./config/grafana/dashboards/system:/var/lib/grafana/dashboards/system
      - ./config/grafana/dashboards/cloudflare:/var/lib/grafana/dashboards/cloudflare
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - k6-support

  node-exporter:
    image: prom/node-exporter:latest
    container_name: k6-support-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - k6-support
    ports:
      - 9100:9100

cloudflare-exporter:
    image: cyb3rjak3/cloudflare-exporter:latest
    container_name: k6-support-cloudflare-exporter
    restart: unless-stopped
    environment:
      # Required
      - CF_API_TOKEN=${CF_API_TOKEN}
      - CF_ZONES=${CF_ZONES}
      # Optional with defaults
      - SCRAPE_DELAY=300  # Default 300 seconds (5 minutes)
      - LISTEN=:8080      # Default port
      - METRICS_PATH=/metrics
      - CF_BATCH_SIZE=10  # Default 10
      - FREE_TIER=false   # Default false
      # Optional exclusions
      - CF_EXCLUDE_ZONES=${CF_EXCLUDE_ZONES:-}  # Optional
      - METRICS_DENYLIST=${METRICS_DENYLIST:-}  # Optional
    ports:
      - "9198:8080"      # Map container's 8080 to host's 9198
    networks:
      - k6-support