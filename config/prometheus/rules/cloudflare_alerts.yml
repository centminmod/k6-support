# /config/prometheus/rules/alerts.yml
groups:
  - name: cloudflare_exporter_alerts
    rules:
      - alert: CloudflareExporterDown
        expr: up{job="cloudflare"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Cloudflare Exporter is down"
          description: "The Cloudflare exporter has been unreachable for more than 5 minutes."

      - alert: CloudflareWorkerRequestsStale
        expr: increase(cloudflare_worker_requests_count[5m]) == 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Cloudflare Worker Requests are stale"
          description: "The `cloudflare_worker_requests_count` metric has not increased in the last 5 minutes."

      - alert: CloudflareCriticalMetricAbsent
        expr: absent(cloudflare_zone_bandwidth_total)
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Critical Cloudflare Metric Absent"
          description: "The `cloudflare_zone_bandwidth_total` metric is absent for more than 5 minutes."

  - name: alertmanager_monitoring
    rules:
      - alert: AlertmanagerConfigurationReloadFailure
        expr: alertmanager_config_last_reload_successful != 1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "AlertManager configuration reload failure"
          description: "AlertManager has failed to reload its configuration"

      - alert: AlertmanagerClusterMemberDown
        expr: up{job="alertmanager"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "AlertManager service is down"
          description: "AlertManager has been unreachable for more than 5m"

  - name: prometheus_monitoring
    rules:
      - alert: PrometheusHighMemoryUsage
        expr: |
          (process_resident_memory_bytes{job="prometheus"} / container_spec_memory_limit_bytes{job="prometheus"}) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on Prometheus"
          description: "Prometheus is using more than 80% of its memory limit for 5m"

      - alert: PrometheusTargetMissing
        expr: up == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Prometheus target missing (instance {{ $labels.instance }})"
          description: "A Prometheus target has disappeared. An exporter might be crashed."

      - alert: PrometheusConfigurationReloadFailure
        expr: prometheus_config_last_reload_successful != 1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Prometheus configuration reload failure"
          description: "Prometheus configuration reload error"

  - name: node_monitoring
    rules:
      - alert: HostOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Host out of memory (instance {{ $labels.instance }})"
          description: "Node memory is filling up (< 10% left)"

      - alert: HostHighCpuLoad
        expr: 100 - (avg by(instance)(rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Host high CPU load (instance {{ $labels.instance }})"
          description: "CPU load is > 80%"

  - name: PrometheusServiceDiscovery  # More specific group name
    rules:
      - alert: SDDNSLookupFailures      # Shortened, still clear name
        expr: increase(prometheus_sd_dns_lookup_failures_total[5m]) > 0
        for: 2m
        labels:
          severity: warning
          category: service_discovery    # Added categorization
        annotations:
          summary: "Service Discovery DNS lookup failures"
          description: "{{ $value }} DNS lookup failures in last 5m"
          runbook_url: "https://your-wiki/runbooks/sd-troubleshooting"  # Optional but recommended

  - name: PrometheusScrapeHealth      # Separate group for scrape-related alerts
    rules:
      - alert: MultipleTargetsDown
        expr: count(up == 0) > 1
        for: 5m
        labels:
          severity: critical
          category: availability
        annotations:
          summary: "Multiple targets unreachable"
          description: "{{ $value }} scrape targets are down. Affected targets: {{ range query 'up == 0' }}{{ .Labels.job }}, {{ end }}"

      - alert: ScrapeDurationHigh
        expr: rate(scrape_duration_seconds[5m]) > 0.5
        for: 5m
        labels:
          severity: warning
          category: performance
        annotations:
          summary: "High scrape latency"
          description: "Job {{ $labels.job }} scrape duration is {{ $value }}s"

  - name: PrometheusCardinality      # Separate group for cardinality alerts
    rules:
      - alert: HighSeriesCreationRate
        expr: rate(scrape_series_added[5m]) > 100
        for: 5m
        labels:
          severity: warning
          category: cardinality
        annotations:
          summary: "High rate of new series creation"
          description: "Job {{ $labels.job }} is creating {{ $value }} series/s"
          dashboard_url: "${GRAFANA_URL}/d/prometheus-cardinality"

      - alert: CardinalityExplosion
        expr: changes(scrape_series_added[1h]) > 1000
        for: 5m
        labels:
          severity: critical
          category: cardinality
        annotations:
          summary: "Cardinality explosion detected"
          description: "Job {{ $labels.job }} has abnormal series growth"
          runbook_url: "https://your-wiki/runbooks/cardinality-explosion"