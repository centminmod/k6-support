# Global tags can be specified here in key="value" format.
[global_tags]

[agent]
  interval = "5s"  # Keeping your original interval
  round_interval = true
  metric_buffer_limit = 10000
  flush_buffer_when_full = true
  collection_jitter = "0s"
  flush_interval = "1s"  # Keeping your original interval
  flush_jitter = "0s"
  debug = false
  quiet = false
  hostname = ""

# Original K6 InfluxDB Output
[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "telegraf"
  precision = "s"
  timeout = "5s"
  username = "${TELEGRAF_INFLUXDB_USER}"
  password = "${TELEGRAF_INFLUXDB_PASSWORD}"

# New InfluxDB V2 Output for Cloudflare
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${INFLUX_TOKEN}"
  organization = "myorg"
  bucket = "cloudflare"
  content_encoding = "gzip"
  namepass = ["cloudflare_*"]  # Only send cloudflare metrics to this bucket

# Original StatSD Input for K6
[[inputs.statsd]]
  protocol = "udp"
  max_tcp_connections = 250
  tcp_keep_alive = false
  service_address = ":8125"
  delete_gauges = true
  delete_counters = true
  delete_sets = true
  delete_timings = true
  percentiles = [90]
  metric_separator = "_"
  allowed_pending_messages = 10000
  percentile_limit = 1000

# Existing Docker Input
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  container_names = []
  gather_services = false
  source_tag = false
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []

# System Metrics (keeping your original configuration)
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  fielddrop = ["time_*"]

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.net]]

[[inputs.netstat]]

[[inputs.interrupts]]

[[inputs.linux_sysctl_fs]]

# Additional Cloudflare Monitoring
[[inputs.prometheus]]
  urls = ["http://cloudflare-exporter:9199/metrics"]
  metric_version = 2
  name_prefix = "cloudflare_"
  interval = "5s"  # Match your existing interval

[[inputs.http_response]]
  urls = ["http://localhost:9199"]
  response_timeout = "5s"
  method = "GET"
  follow_redirects = true
  response_status_code = 200