# Global tags can be specified here in key="value" format.
[global_tags]

[agent]
  interval = "5s"
  round_interval = true
  metric_buffer_limit = 10000
  flush_buffer_when_full = true
  collection_jitter = "0s"
  flush_interval = "1s"
  flush_jitter = "0s"
  debug = false
  quiet = false
  hostname = ""

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"
  organization = "${DOCKER_INFLUXDB_INIT_ORG}"
  bucket = "cloudflare"
  content_encoding = "gzip"
  #namepass = ["cloudflare_*"] # disable [[inputs.prometheus]]

[[outputs.prometheus_client]]
  ## Address to listen on
  listen = ":9273"
  ## Path to publish the metrics on
  path = "/metrics"
  ## Expiration interval for each metric. 0 == no expiration
  expiration_interval = "60s"
  ## Use HTTP Basic Authentication
  # basic_username = "Foo"
  # basic_password = "Bar"
  ## Enable TLS
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"

# Original StatSD Input for K6
[[inputs.statsd]]
  protocol = "udp"
  max_tcp_connections = 250
  tcp_keep_alive = false
  service_address = ":8125"
  delete_gauges = true
  delete_counters = true
  delete_sets = true
  delete_timings = true
  percentiles = [90]
  metric_separator = "_"
  allowed_pending_messages = 10000
  percentile_limit = 1000

# System Metrics
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  fielddrop = ["time_*"]

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs"]

[[inputs.diskio]]
[[inputs.kernel]]
[[inputs.mem]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]

[[inputs.net]]
  # Remove deprecated option
  interfaces = ["eth*", "en*"]

[[inputs.netstat]]
[[inputs.interrupts]]
[[inputs.linux_sysctl_fs]]

# Additional Cloudflare Monitoring
#[[inputs.prometheus]]
#  ## Fix port to match cloudflare-exporter service
#  urls = ["http://cloudflare-exporter:8080/metrics"]
#  metric_version = 2
#  name_prefix = "cloudflare_"
#  interval = "5s"

[[inputs.http_response]]
  ## Fix port to match cloudflare-exporter service
  urls = ["http://cloudflare-exporter:8080"]
  response_timeout = "5s"
  method = "GET"
  follow_redirects = true
  response_status_code = 200